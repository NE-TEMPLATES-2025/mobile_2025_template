generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  ATTENDANT
}

model User {
  id        String @id @default(uuid())
  firstName String @map("first_name")
  lastName  String @map("last_name")
  email     String @unique @map("email")
  password  String @map("password")

  role    Role      @map("role")
  parking Parking[]

  @@map("users")
}

model Parking {
  code               String @id @unique
  parkingName        String @map("parking_name")
  availableSpaces    Int    @map("available_spaces")
  location           String @map("location")
  chargingFeePerHour Float  @map("charging_fee_per_hour")

  userId String
  user   User   @relation(fields: [userId], references: [id])

  carMovement CarMovement[]
}

model CarMovement {
  id            String    @id @default(uuid())
  plateNumber   String
  parkingCode   String
  parking       Parking   @relation(fields: [parkingCode], references: [code])
  entryDateTime DateTime  @map("entry_date_time")
  exitDateTime  DateTime? @default(dbgenerated("NULL")) @map("exit_date_time")
  chargedAmount Int       @default(0) @map("charged_amount")

  @@map("car_movements")
}

model Ticket {
  id            Int      @id @default(autoincrement())
  plateNumber   String
  parkingCode   String
  entryDateTime DateTime @map("entry_date_time")

  @@map("tickets")
}

model Bill {
  id            Int       @id @default(autoincrement())
  plateNumber   String
  parkingCode   String
  entryDateTime DateTime  @map("entry_date_time")
  exitDateTime  DateTime? @map("exit_date_time")
  chargedAmount Int       @map("charged_amount")

  @@map("bills")
}
